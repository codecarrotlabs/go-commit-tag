name: CI

on:
  push:
    branches: [ "main" ]
    tags:
      - v*
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.19', '1.20', '1.21.', '1.22']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
        cache-dependency-path: ${{ github.workspace }}/go.sum

    - name: Check go mod
      run: go mod tidy

    - name: Install dependencies
      run: go get .

    - name: Build (Go v${{ matrix.go-version }})
      run: go build -v ./main.go

    - name: Cache Go executable
      if: matrix.go-version == '1.22'
      uses: actions/cache@v4
      with:
        path: ${{ github.workspace }}/main
        # Generate a new cache whenever packages or source files change.
        key: linux-OS-go-v${{ matrix.go-version }}-${{ hashFiles('**/go.mod') }}

#    - name: Test
#      run: go test -v ./...

  release:
    if: github.event_name == 'push' && github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: Cache Go executable
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/main
          key: linux-OS-go-v1.22-${{ hashFiles('**/go.mod') }}
          restore-keys: |
            linux-OS-go-v1.22-${{ hashFiles('**/go.mod') }}

      - uses: actions/upload-artifact@v4
        with:
          name: go-commit-tag
          path: ${{ github.workspace }}/main
